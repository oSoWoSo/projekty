name: Deployment

on:
 workflow_dispatch:
   # Inputs the workflow accepts.
   inputs:
     repo:
       description: 'Choose repo'
       required: true
       type: choice
       options:
         $REPO
     branch:
       description: 'Choose branch'
       required: true
       type: choice
       options:
         $BRANCH
     upstream_repo:
       description: 'Choose upstream repo'
       required: true
       type: choice
       options:
         $UPSTREAM_REPO
     upstream_branch:
       description: 'Choose upstream branch'
       required: true
       type: choice
       options:
         $UPSTREAM_BRANCH
     sync_test_mode: # Adds a boolean option that appears during manual workflow run for easy test mode config
        description: 'Fork Sync Test Mode'
        type: boolean
        default: false
permissions:
  contents: write
  actions: write

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: " üåç Rebasing ${{ inputs.repo }} branch ${{ inputs.branch }} on ${{ inputs.upstream_repo }} branch ${{ inputs.upstream_branch }}"

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repo }}
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        ref:  ${{ inputs.branch }}
        # REQUIRED if your upstream repo is private (see wiki)
        persist-credentials: false

    # REQUIRED step
    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3
      with:
        target_sync_branch: ${{ inputs.branch }}
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.TOKEN }}
        upstream_sync_branch: ${{ inputs.upstream_branch }}
        upstream_sync_repo: ${{ inputs.upstream_repo }}
        #upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}

        # Set test_mode true during manual dispatch to run tests instead of the true action!!
        test_mode: ${{ inputs.sync_test_mode }}

    # Step 3: Display a sample message based on the sync output var 'has_new_commits'
    - name: New commits found
      if: steps.sync.outputs.has_new_commits == 'true'
      run: echo "New commits were found to sync."

    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."

    - name: Show value of 'has_new_commits'
      run: echo ${{ steps.sync.outputs.has_new_commits }}
